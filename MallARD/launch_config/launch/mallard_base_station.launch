<?xml version="1.0"?>
<launch>
   <!-- Get MALLARD_VERSION -->
   <arg name="ARG_MALLARD_VERSION" value="$(optenv MALLARD_VERSION 001_SIM)" /> 
   <!-- Get MALLARD_AUTONOMOUS. 1: Autonomous Mode. 0: Manual Mode. -->
   <arg name="ARG_MALLARD_AUTONOMOUS" value="$(optenv MALLARD_AUTONOMOUS 0)" />


   <!-- <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.045 0 0.22 0 0 0 1 base_link laser 20" /> -->
   <!-- <node name="mallard_tf_broadcaster" pkg="mallard_tf" type="mallard_tf_broadcaster.py" respawn="false" output="screen" /> -->

   <!-- Robot model. URDF/xacro -->
   <arg name="model" default="$(find launch_config)/urdf/mallard_main_$(arg ARG_MALLARD_VERSION).xacro"/>
   
   <group ns="mallard">
      <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>

      <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>

      <!-- send fake joint values. for non-fixed joints-->
      <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher"/>
   </group>


   <!-- Joypad -->
   <!-- Connect to ps4 controller, and publish button presses -->
   <node pkg="joy" type="joy_node" name="joy">
      <param name="joy_node/dev" value="/dev/input/js" />
      <param name="coalesce_interval" type="double" value="0.05" />
      <!-- <param name="autorepeat_rate" type="double" value="20" /> -->
   </node>

   <!-- This node takes the topic generated by the joypad and converts data into a cmd_vel -->
   <node pkg="control_nodes" type="joy2command.py" name="Joy2cmd" output="screen">
      <rosparam file="$(find launch_config)/$(arg ARG_MALLARD_VERSION)/cfg/yaml/$(arg ARG_MALLARD_VERSION).yaml" command="load"/>
   </node>

   <!-- modified Scan for RViz -->
   <node pkg="control_nodes" type="scanViz.py" name="scan_viz">
      <param name="delay" value="0.5" />
   </node>

   <!-- Autonomous Mode -->
   <group if="$(arg ARG_MALLARD_AUTONOMOUS)">
      <!-- 3D visualisation "RViz" -->
      <group unless="$(eval ARG_MALLARD_VERSION == '001_SIM')">
         <node type="rviz" name="rviz" pkg="rviz" args="-d $(find launch_config)/cfg/rviz/mallard_rviz.rviz" />
      </group>

      <!-- Use markers to control where the robot goes -->
      <node pkg="mallard_autonomy" type="coverage_selection.py" name="areaSelectionMarkers" output="screen"/>

      <!-- launch the dynamic reconfigure -->
      <node pkg="rqt_reconfigure" type="rqt_reconfigure" name="rqt_reconfigure" />
   </group>

</launch>
